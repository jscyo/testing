For this task, you will be building server-side GraphQL schema(s) to start, update, and mitigate site wide warnings. This is a Node + Express server running Apollo GraphQL, hooked up to MongoDB via Mongoose. A User schema is already provided and example queries and mutations are in the README.

The prototyped mock ups at this Figma link illustrate how the full feature works.

A warning consists of at least two fields:

type: SiteWideWarningType
label: String

There are three types of warnings:

    Download Server Unavailable Warning
    Upload Server Unavailable Warning
    Data Inconsistency Warning

Each type of warning has it's own hardcoded label which you can find in the Figma link attached above.

5 actions need to be supported:

    Creating a warning
    Reading a warning
    Updating a warning
    Deleting a warning
    Dismissing a warning

If a warning is updated to a different type, the user should see the new warning even if they dismissed it. Similarly, if a user dismissed the current warning, but it's ended, and a new warning starts, they should see the new warning.

Note 1: You aren't building the frontend, so all your changes should be in the server subfolder.

Note 2: No more than one Site Wide Warning can be ongoing at the same time.

Note 3: Pay careful attention to the runtime/memory usage of each action in respect to total number of users.

Steps:

    Follow setup instructions on README.
    Build your solution.
    Log key events using the provided logger util.

You are allowed to edit, remove, or add any file in this repository to complete the task.

https://www.figma.com/file/Jx9AjonVHhkcomBA21RQoP/%5BNew%5D-Site-Wide-Warning?node-id=0%3A1
